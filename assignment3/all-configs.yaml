# app-1-dep.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-1-dep
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app-1
  template:
    metadata:
      labels:
        app: app-1
    spec:
      containers:
      - name: app-1
        image: ghcr.io/denoslab/ensf400-sample-app:v1
        imagePullPolicy: Always
        ports:
        - containerPort: 3000


#app-1-ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: app-1-ingress
  annotations:
    nginx.ingress.kubernetes.io/canary: "true"
    nginx.ingress.kubernetes.io/canary-weight: "70"
spec:
  rules:
  - http:
      paths:
      - path: /app-1
        pathType: Prefix
        backend:
          service:
            name: app-1-service
            port:
              number: 3000
#app-1-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: app-1-service
spec:
  selector:
    app: app-1
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000# app-2-dep.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-2-dep
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app-2
  template:
    metadata:
      labels:
        app: app-2
    spec:
      containers:
      - name: app-2
        image: ghcr.io/denoslab/ensf400-sample-app:v2
        imagePullPolicy: Always
        ports:
        - containerPort: 3000

#app-2-ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: app-2-ingress
  annotations:
    nginx.ingress.kubernetes.io/canary: "true"
    nginx.ingress.kubernetes.io/canary-weight: "30"
spec:
  rules:
  - http:
      paths:
      - path: /app-2
        pathType: Prefix
        backend:
          service:
            name: app-2-service
            port:
              number: 3000
#app-2-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: app-2-service
spec:
  selector:
    app: app-2
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
#nginx-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-configmap
data:
  nginx.cfg: |
    upstream backend {
        server app-1:8080;
        server app-2:8080;
    }

    server {
        location / {
            proxy_pass http://backend;
        }
    }

#nginx-dep.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-dep
spec:
  replicas: 5
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx-container
        image: nginx:1.14.2
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.cfg
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-configmap
#nginx-ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nginx-ingress
spec:
  rules:
  - http:
      paths:
      - path: /nginx
        pathType: Prefix
        backend:
          service:
            name: nginx-svc
            port:
              number: 8080
#nginx-svc
apiVersion: v1
kind: Service
metadata:
  name: nginx-svc
spec:
  selector:
    app: nginx   # Select pods with the label "app: nginx"
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
  type: ClusterIP